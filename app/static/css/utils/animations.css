/* animations.css - 애니메이션 및 전환 유틸리티 */

/* 기본 애니메이션 */
@keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @keyframes fade-out {
    from { opacity: 1; }
    to { opacity: 0; }
  }
  
  @keyframes slide-in-top {
    from {
      transform: translateY(-20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes slide-in-right {
    from {
      transform: translateX(20px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes slide-in-bottom {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  @keyframes slide-in-left {
    from {
      transform: translateX(-20px);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  @keyframes scale-in {
    from {
      transform: scale(0.9);
      opacity: 0;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }
  
  @keyframes scale-out {
    from {
      transform: scale(1);
      opacity: 1;
    }
    to {
      transform: scale(0.9);
      opacity: 0;
    }
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
  
  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
      animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
      transform: translateY(-25%);
      animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  @keyframes ping {
    75%, 100% {
      transform: scale(2);
      opacity: 0;
    }
  }
  
  /* 애니메이션 유틸리티 클래스 */
  .animate-none { animation: none; }
  .animate-fade-in { animation: fade-in var(--transition-normal) forwards; }
  .animate-fade-out { animation: fade-out var(--transition-normal) forwards; }
  .animate-slide-in-top { animation: slide-in-top var(--transition-normal) forwards; }
  .animate-slide-in-right { animation: slide-in-right var(--transition-normal) forwards; }
  .animate-slide-in-bottom { animation: slide-in-bottom var(--transition-normal) forwards; }
  .animate-slide-in-left { animation: slide-in-left var(--transition-normal) forwards; }
  .animate-scale-in { animation: scale-in var(--transition-normal) forwards; }
  .animate-scale-out { animation: scale-out var(--transition-normal) forwards; }
  .animate-pulse { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; }
  .animate-bounce { animation: bounce 1s infinite; }
  .animate-spin { animation: spin 1s linear infinite; }
  .animate-ping { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite; }
  
  /* 애니메이션 지연 */
  .delay-0 { animation-delay: 0s; }
  .delay-75 { animation-delay: 75ms; }
  .delay-100 { animation-delay: 100ms; }
  .delay-150 { animation-delay: 150ms; }
  .delay-200 { animation-delay: 200ms; }
  .delay-300 { animation-delay: 300ms; }
  .delay-500 { animation-delay: 500ms; }
  .delay-700 { animation-delay: 700ms; }
  .delay-1000 { animation-delay: 1000ms; }
  
  /* 애니메이션 지속 시간 */
  .duration-75 { animation-duration: 75ms; }
  .duration-100 { animation-duration: 100ms; }
  .duration-150 { animation-duration: 150ms; }
  .duration-200 { animation-duration: 200ms; }
  .duration-300 { animation-duration: 300ms; }
  .duration-500 { animation-duration: 500ms; }
  .duration-700 { animation-duration: 700ms; }
  .duration-1000 { animation-duration: 1000ms; }
  
  /* 애니메이션 타이밍 함수 */
  .ease-linear { animation-timing-function: linear; }
  .ease-in { animation-timing-function: cubic-bezier(0.4, 0, 1, 1); }
  .ease-out { animation-timing-function: cubic-bezier(0, 0, 0.2, 1); }
  .ease-in-out { animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  
  /* 애니메이션 채우기 모드 */
  .fill-none { animation-fill-mode: none; }
  .fill-forwards { animation-fill-mode: forwards; }
  .fill-backwards { animation-fill-mode: backwards; }
  .fill-both { animation-fill-mode: both; }
  
  /* 전환 속성 */
  .transition-none { transition-property: none; }
  .transition-all { transition-property: all; }
  .transition { 
    transition-property: color, background-color, border-color, 
                         text-decoration-color, fill, stroke, 
                         opacity, box-shadow, transform, filter, backdrop-filter; 
  }
  .transition-colors { 
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke; 
  }
  .transition-opacity { transition-property: opacity; }
  .transition-shadow { transition-property: box-shadow; }
  .transition-transform { transition-property: transform; }
  
  /* 전환 지속 시간 */
  .duration-75 { transition-duration: 75ms; }
  .duration-100 { transition-duration: 100ms; }
  .duration-150 { transition-duration: 150ms; }
  .duration-200 { transition-duration: 200ms; }
  .duration-300 { transition-duration: 300ms; }
  .duration-500 { transition-duration: 500ms; }
  .duration-700 { transition-duration: 700ms; }
  .duration-1000 { transition-duration: 1000ms; }
  
  /* 전환 타이밍 함수 */
  .ease-linear { transition-timing-function: linear; }
  .ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }
  .ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }
  .ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
  
  /* 전환 지연 */
  .delay-0 { transition-delay: 0s; }
  .delay-75 { transition-delay: 75ms; }
  .delay-100 { transition-delay: 100ms; }
  .delay-150 { transition-delay: 150ms; }
  .delay-200 { transition-delay: 200ms; }
  .delay-300 { transition-delay: 300ms; }
  .delay-500 { transition-delay: 500ms; }
  .delay-700 { transition-delay: 700ms; }
  .delay-1000 { transition-delay: 1000ms; }
  
  /* 변환 유틸리티 */
  .translate-x-0 { transform: translateX(0); }
  .translate-x-1 { transform: translateX(var(--spacing-1)); }
  .translate-x-2 { transform: translateX(var(--spacing-2)); }
  .translate-x-3 { transform: translateX(var(--spacing-3)); }
  .translate-x-4 { transform: translateX(var(--spacing-4)); }
  .translate-x-6 { transform: translateX(var(--spacing-6)); }
  .translate-x-8 { transform: translateX(var(--spacing-8)); }
  .translate-x-12 { transform: translateX(var(--spacing-12)); }
  .translate-x-16 { transform: translateX(var(--spacing-16)); }
  .translate-x-20 { transform: translateX(var(--spacing-20)); }
  .translate-x-24 { transform: translateX(var(--spacing-24)); }
  .translate-x-32 { transform: translateX(var(--spacing-32)); }
  .translate-x-40 { transform: translateX(var(--spacing-40)); }
  .translate-x-48 { transform: translateX(var(--spacing-48)); }
  .translate-x-56 { transform: translateX(var(--spacing-56)); }
  .translate-x-64 { transform: translateX(var(--spacing-64)); }
  .translate-x-1\/2 { transform: translateX(50%); }
  .translate-x-1\/3 { transform: translateX(33.333333%); }
  .translate-x-2\/3 { transform: translateX(66.666667%); }
  .translate-x-1\/4 { transform: translateX(25%); }
  .translate-x-3\/4 { transform: translateX(75%); }
  .translate-x-full { transform: translateX(100%); }
  .translate-x-px { transform: translateX(1px); }
  .-translate-x-1 { transform: translateX(calc(-1 * var(--spacing-1))); }
  .-translate-x-2 { transform: translateX(calc(-1 * var(--spacing-2))); }
  /* 네거티브 translate-x-* 유틸리티들... */
  .-translate-x-full { transform: translateX(-100%); }
  .-translate-x-px { transform: translateX(-1px); }
  
  /* 유사한 패턴으로 translate-y-*, scale-*, rotate-*, skew-* 유틸리티들... */
  
  /* 반응형 애니메이션 */
  @media (min-width: 640px) {
    .sm\:animate-none { animation: none; }
    .sm\:animate-fade-in { animation: fade-in var(--transition-normal) forwards; }
    /* 모든 애니메이션 유틸리티에 대한 sm: 접두어 반응형 클래스들... */
  }
  
  @media (min-width: 768px) {
    .md\:animate-none { animation: none; }
    .md\:animate-fade-in { animation: fade-in var(--transition-normal) forwards; }
    /* 모든 애니메이션 유틸리티에 대한 md: 접두어 반응형 클래스들... */
  }
  
  @media (min-width: 1024px) {
    .lg\:animate-none { animation: none; }
    .lg\:animate-fade-in { animation: fade-in var(--transition-normal) forwards; }
    /* 모든 애니메이션 유틸리티에 대한 lg: 접두어 반응형 클래스들... */
  }
  
  @media (min-width: 1280px) {
    .xl\:animate-none { animation: none; }
    .xl\:animate-fade-in { animation: fade-in var(--transition-normal) forwards; }
    /* 모든 애니메이션 유틸리티에 대한 xl: 접두어 반응형 클래스들... */
  }
  
  @media (min-width: 1536px) {
    .\32xl\:animate-none { animation: none; }
    .\32xl\:animate-fade-in { animation: fade-in var(--transition-normal) forwards; }
    /* 모든 애니메이션 유틸리티에 대한 2xl: 접두어 반응형 클래스들... */
  }
  
  /* 애니메이션 상태에 따른 스타일 적용 */
  @media (prefers-reduced-motion: reduce) {
    .motion-reduce, .motion-reduce * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
  
  .motion-safe {
    @media (prefers-reduced-motion: no-preference) {
      animation-duration: inherit;
      transition-duration: inherit;
    }
  }